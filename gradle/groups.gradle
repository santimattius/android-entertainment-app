def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

project.ext {

    kotlinCore = Group {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }

    androidCore = Group {
        implementation "androidx.core:core-ktx:$core_ktx_version"
        testImplementation "androidx.arch.core:core-testing:2.1.0"
    }

    ui = Group {
        implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
        implementation "androidx.appcompat:appcompat:$appcompat_version"
        implementation "androidx.fragment:fragment-ktx:$fragment_version"
        implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
        implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
        implementation "com.google.android.material:material:$material_version"
        debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    }

    lifecycle = Group {
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"

    }

    networking = Group {
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
        implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"
        implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

        //moshi
        implementation "com.squareup.moshi:moshi:$moshi_version"
        implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

        testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

        androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
        androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:1.0.0"
    }

    coroutines = Group {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    }

    koin = Group {
        // Koin for Android
        implementation "org.koin:koin-android:$koin_version"
        // or Koin for Lifecycle scoping
        implementation "org.koin:koin-androidx-scope:$koin_version"
        // or Koin for Android Architecture ViewModel
        implementation "org.koin:koin-androidx-viewmodel:$koin_version"
        // or Koin for Android Fragment Factory (unstable version)
        implementation "org.koin:koin-androidx-fragment:$koin_version"

        testImplementation "org.koin:koin-test:$koin_version"
        androidTestImplementation "org.koin:koin-test:$koin_version"
    }

    room = Group {
        implementation "androidx.room:room-runtime:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
    }

    imageLoader = Group {
        implementation "com.github.bumptech.glide:glide:$glide_version"
    }

    junit = Group {
        testImplementation "junit:junit:$junit_version"
    }

    mockk = Group {
        testImplementation "io.mockk:mockk:$mockk_version"
        testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
        androidTestImplementation "io.mockk:mockk-android:$mockk_version"
        androidTestImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
    }

    androidTesting = Group {
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test:rules:1.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
        androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.1'
    }
}